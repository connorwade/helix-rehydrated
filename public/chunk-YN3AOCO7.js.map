{
  "version": 3,
  "sources": ["../src/utils.js"],
  "sourcesContent": ["export function getData(node, selector, prop) {\n  prop = prop || \"textContent\";\n  const el = node.querySelector(selector);\n  return el ? el[prop] : \"\";\n}\n\nexport function gather(node, selector) {\n  return [...node.querySelectorAll(`:scope ${selector}`)];\n}\n\nexport const swapNode = (node, swapper, tag) => {\n  const element = document.createElement(tag || \"div\");\n  element.className = node.className;\n  element.innerHTML = swapper;\n  node.replaceWith(element);\n  element.dataset.rendered = true;\n};\n\nexport const renderTemplate = (template, data) => {\n  let render = template;\n  for (let key in data) {\n    render = render.replace(new RegExp(`\\\\$\\\\{${key}\\\\}`, \"g\"), data[key]);\n  }\n  return render;\n};\n\nexport const makeMany = (node, template, data, tag) => {\n  tag = tag || \"div\";\n  return swapNode(\n    node,\n    gather(node, ` > ${tag}`)\n      .map((i) => renderTemplate(template, data(i)))\n      .join(\"\"),\n    tag\n  );\n};\n\nexport const makeSingle = (node, template, data, tag) => {\n  tag = tag || \"div\";\n  return swapNode(node, renderTemplate(template, data(node)), tag);\n};\n\nexport const fromManyMakeSingle = (nodes, template, data) => {\n  const html = renderTemplate(template, data(nodes));\n\n  nodes.forEach((node, i) => {\n    if (i === 0) return;\n    node.remove();\n  });\n\n  nodes[0].outerHTML = html;\n  nodes[0].dataset.rendered = true;\n\n  return nodes[0];\n};\n\n/**\n *\n * @param {HTMLDivElement} node\n */\nexport const applyMetaData = (node) => {\n  const parent = node.parentElement;\n\n  for (const block of [...node.children]) {\n    const key = block.firstElementChild.innerText;\n    const val = block.lastElementChild.innerText;\n    switch (key.toLowerCase()) {\n      case \"style\":\n        parent.classList.add(val);\n        break;\n      default:\n        console.error(`Unhandled metadata: KEY: ${key}, VAL: ${val}`);\n    }\n  }\n\n  node.remove();\n};\n"],
  "mappings": ";AAAO,SAAS,QAAQ,MAAM,UAAU,MAAM;AAC5C,SAAO,QAAQ;AACf,QAAM,KAAK,KAAK,cAAc,QAAQ;AACtC,SAAO,KAAK,GAAG,IAAI,IAAI;AACzB;AAEO,SAAS,OAAO,MAAM,UAAU;AACrC,SAAO,CAAC,GAAG,KAAK,iBAAiB,UAAU,QAAQ,EAAE,CAAC;AACxD;AAEO,IAAM,WAAW,CAAC,MAAM,SAAS,QAAQ;AAC9C,QAAM,UAAU,SAAS,cAAc,OAAO,KAAK;AACnD,UAAQ,YAAY,KAAK;AACzB,UAAQ,YAAY;AACpB,OAAK,YAAY,OAAO;AACxB,UAAQ,QAAQ,WAAW;AAC7B;AAEO,IAAM,iBAAiB,CAAC,UAAU,SAAS;AAChD,MAAI,SAAS;AACb,WAAS,OAAO,MAAM;AACpB,aAAS,OAAO,QAAQ,IAAI,OAAO,SAAS,GAAG,OAAO,GAAG,GAAG,KAAK,GAAG,CAAC;AAAA,EACvE;AACA,SAAO;AACT;AAEO,IAAM,WAAW,CAAC,MAAM,UAAU,MAAM,QAAQ;AACrD,QAAM,OAAO;AACb,SAAO;AAAA,IACL;AAAA,IACA,OAAO,MAAM,MAAM,GAAG,EAAE,EACrB,IAAI,CAAC,MAAM,eAAe,UAAU,KAAK,CAAC,CAAC,CAAC,EAC5C,KAAK,EAAE;AAAA,IACV;AAAA,EACF;AACF;AAEO,IAAM,aAAa,CAAC,MAAM,UAAU,MAAM,QAAQ;AACvD,QAAM,OAAO;AACb,SAAO,SAAS,MAAM,eAAe,UAAU,KAAK,IAAI,CAAC,GAAG,GAAG;AACjE;AAEO,IAAM,qBAAqB,CAAC,OAAO,UAAU,SAAS;AAC3D,QAAM,OAAO,eAAe,UAAU,KAAK,KAAK,CAAC;AAEjD,QAAM,QAAQ,CAAC,MAAM,MAAM;AACzB,QAAI,MAAM;AAAG;AACb,SAAK,OAAO;AAAA,EACd,CAAC;AAED,QAAM,CAAC,EAAE,YAAY;AACrB,QAAM,CAAC,EAAE,QAAQ,WAAW;AAE5B,SAAO,MAAM,CAAC;AAChB;AAMO,IAAM,gBAAgB,CAAC,SAAS;AACrC,QAAM,SAAS,KAAK;AAEpB,aAAW,SAAS,CAAC,GAAG,KAAK,QAAQ,GAAG;AACtC,UAAM,MAAM,MAAM,kBAAkB;AACpC,UAAM,MAAM,MAAM,iBAAiB;AACnC,YAAQ,IAAI,YAAY,GAAG;AAAA,MACzB,KAAK;AACH,eAAO,UAAU,IAAI,GAAG;AACxB;AAAA,MACF;AACE,gBAAQ,MAAM,4BAA4B,GAAG,UAAU,GAAG,EAAE;AAAA,IAChE;AAAA,EACF;AAEA,OAAK,OAAO;AACd;",
  "names": []
}

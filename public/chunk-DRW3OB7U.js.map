{
  "version": 3,
  "sources": ["../src/utils.js"],
  "sourcesContent": ["export function getData(node, selector, prop) {\n  prop = prop || \"textContent\";\n  const el = node.querySelector(selector);\n  return el ? el[prop] : \"\";\n}\n\nexport function gather(node, selector) {\n  return [...node.querySelectorAll(`:scope ${selector}`)];\n}\n\nexport const swapNode = (node, swapper, tag) => {\n  const element = document.createElement(tag || \"div\");\n  element.className = node.className;\n  element.innerHTML = swapper;\n  node.replaceWith(element);\n  element.dataset.rendered = true;\n};\n\nexport const renderTemplate = (template, data) => {\n  let render = template;\n  for (let key in data) {\n    render = render.replace(new RegExp(`\\\\$\\\\{${key}\\\\}`, \"g\"), data[key]);\n  }\n  return render;\n};\n\nexport const makeMany = (node, template, data, tag) => {\n  tag = tag || \"div\";\n  return swapNode(\n    node,\n    gather(node, ` > ${tag}`)\n      .map((i) => renderTemplate(template, data(i)))\n      .join(\"\"),\n    tag\n  );\n};\n\nexport const makeSingle = (node, template, data, tag) => {\n  tag = tag || \"div\";\n  return swapNode(node, renderTemplate(template, data(node)), tag);\n};\n\nexport const fromManyMakeSingle = (nodes, template, data) => {\n  const html = renderTemplate(template, data(nodes));\n\n  nodes.forEach((node, i) => {\n    if (i === 0) return;\n    node.remove();\n  });\n\n  nodes[0].outerHTML = html;\n  nodes[0].dataset.rendered = true;\n\n  return nodes[0];\n};\n\n/**\n *\n * @param {HTMLDivElement} node\n */\nexport const applyMetaData = (node) => {\n  const parent = node.parentElement;\n\n  for (const block of [...node.children]) {\n    const key = block.children[0].innerText;\n    const val = block.children[1].innerText;\n    switch (key.toLowerCase()) {\n      case \"style\":\n        parent.classList.add(val);\n        break;\n      default:\n        console.error(`Unhandled metadata: KEY: ${key}, VAL: ${val}`);\n    }\n  }\n\n  node.remove();\n};\n"],
  "mappings": "AAAO,SAASA,EAAQC,EAAMC,EAAUC,EAAM,CAC5CA,EAAOA,GAAQ,cACf,IAAMC,EAAKH,EAAK,cAAcC,CAAQ,EACtC,OAAOE,EAAKA,EAAGD,CAAI,EAAI,EACzB,CAEO,SAASE,EAAOJ,EAAMC,EAAU,CACrC,MAAO,CAAC,GAAGD,EAAK,iBAAiB,UAAUC,CAAQ,EAAE,CAAC,CACxD,CAEO,IAAMI,EAAW,CAACL,EAAMM,EAASC,IAAQ,CAC9C,IAAMC,EAAU,SAAS,cAAcD,GAAO,KAAK,EACnDC,EAAQ,UAAYR,EAAK,UACzBQ,EAAQ,UAAYF,EACpBN,EAAK,YAAYQ,CAAO,EACxBA,EAAQ,QAAQ,SAAW,EAC7B,EAEaC,EAAiB,CAACC,EAAUC,IAAS,CAChD,IAAIC,EAASF,EACb,QAASG,KAAOF,EACdC,EAASA,EAAO,QAAQ,IAAI,OAAO,SAASC,CAAG,MAAO,GAAG,EAAGF,EAAKE,CAAG,CAAC,EAEvE,OAAOD,CACT,EAEaE,EAAW,CAACd,EAAMU,EAAUC,EAAMJ,KAC7CA,EAAMA,GAAO,MACNF,EACLL,EACAI,EAAOJ,EAAM,MAAMO,CAAG,EAAE,EACrB,IAAKQ,GAAMN,EAAeC,EAAUC,EAAKI,CAAC,CAAC,CAAC,EAC5C,KAAK,EAAE,EACVR,CACF,GAGWS,EAAa,CAAChB,EAAMU,EAAUC,EAAMJ,KAC/CA,EAAMA,GAAO,MACNF,EAASL,EAAMS,EAAeC,EAAUC,EAAKX,CAAI,CAAC,EAAGO,CAAG,GAGpDU,EAAqB,CAACC,EAAOR,EAAUC,IAAS,CAC3D,IAAMQ,EAAOV,EAAeC,EAAUC,EAAKO,CAAK,CAAC,EAEjD,OAAAA,EAAM,QAAQ,CAAClB,EAAMe,IAAM,CACrBA,IAAM,GACVf,EAAK,OAAO,CACd,CAAC,EAEDkB,EAAM,CAAC,EAAE,UAAYC,EACrBD,EAAM,CAAC,EAAE,QAAQ,SAAW,GAErBA,EAAM,CAAC,CAChB,EAMaE,EAAiBpB,GAAS,CACrC,IAAMqB,EAASrB,EAAK,cAEpB,QAAWsB,IAAS,CAAC,GAAGtB,EAAK,QAAQ,EAAG,CACtC,IAAMa,EAAMS,EAAM,SAAS,CAAC,EAAE,UACxBC,EAAMD,EAAM,SAAS,CAAC,EAAE,UAC9B,OAAQT,EAAI,YAAY,EAAG,CACzB,IAAK,QACHQ,EAAO,UAAU,IAAIE,CAAG,EACxB,MACF,QACE,QAAQ,MAAM,4BAA4BV,CAAG,UAAUU,CAAG,EAAE,CAChE,CACF,CAEAvB,EAAK,OAAO,CACd",
  "names": ["getData", "node", "selector", "prop", "el", "gather", "swapNode", "swapper", "tag", "element", "renderTemplate", "template", "data", "render", "key", "makeMany", "i", "makeSingle", "fromManyMakeSingle", "nodes", "html", "applyMetaData", "parent", "block", "val"]
}
